#!/bin/sh
#-------------------------------------------------------------------------------------------------#
# AUTHOR:  Andrew Michaud - https://andrewmichaud.com                                             #
# FILE:    posic                                                                                  #
# PURPOSE: POSIX-specific (not counting OS X for Reasons) shell nonsense definition file.         #
# UPDATED: 2018-03-10                                                                             #
# LICENSE: ISC                                                                                    #
#-------------------------------------------------------------------------------------------------#
# XDG dirs.
[ -z "$XDG_CONFIG_HOME" ] && export XDG_CONFIG_HOME="$HOME/.config"
[ -z "$XDG_CACHE_HOME" ] && export XDG_CACHE_HOME="$HOME/.cache"
[ -z "$XDG_DATA_HOME" ] && export XDG_DATA_HOME="$HOME/.local/share"

# Order of preference for XDG_RUNTIME_DIR.
uid=$(id -u $USER)
if [ -w "/run/user/$uid" ]; then
    export XDG_RUNTIME_DIR="/run/user/$uid"
elif [ -w "/tmp" ]; then
    mkdir -p /tmp/$uid
    export XDG_RUNTIME_DIR="/tmp/$uid"
else
    mkdir -p "$HOME/tmp"
    export XDG_RUNTIME_DIR="$HOME/tmp"
fi

# GNU/Linux specific.
# TODO should add some check for RUNTIME specifically - it's not just a Linux/BSD thing.
if [ "$(uname -s)" = "Linux" ]; then
    alias l="ls -CFh --color=auto"
    alias la="ls -Ah --color=auto"
    alias ll="ls -alh --color=auto"
    alias lt="ls -alht --color=auto"

    # Set LS_COLORS.
    eval "$(dircolors "$XDG_CONFIG_HOME"/colors/dircolors.256dark)"

    # set variable identifying the chroot you work in (used in the prompt below)
    if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
        debian_chroot=$(cat /etc/debian_chroot)
    fi

# BSD specific.
else
    alias l="ls -CFhG"
    alias la="ls -AhG"
    alias ll="ls -alhG"
    alias lt="ls -alhtG"
fi

# pbcopy/pbpaste > xclip
alias pbcopy="xclip -selection clipboard"
alias pbpaste="xclip -selection clipboard -o"

# Ensure ssh-agent is set up and will run.
mkdir -p "$XDG_RUNTIME_DIR/ssh"
if ! pgrep ssh-agent > /dev/null; then
    ssh-agent > "$XDG_RUNTIME_DIR/ssh/agent"
fi

if [ "$SSH_AGENT_PID" = "" ]; then
    ssh-agent > "$XDG_RUNTIME_DIR/ssh/agent"
    eval "$(cat "$XDG_RUNTIME_DIR/ssh/agent")"
fi

ssh-add -l >/dev/null || alias ssh='ssh-add -l >/dev/null || ssh-add && unalias ssh; ssh'
